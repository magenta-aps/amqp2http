# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
[tool.poetry]
name = "amqp2http"
version = "0.0.0" # versioning handled by conventional commits
description = "Rammearkitektur AMQP to HTTP service."
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"

[tool.poetry.dependencies]
python = "^3.11"
structlog = "^24.4.0"
fastramqpi = "^9.1.0"
pydantic = "^1.10.17"
uvicorn = "^0.30.1"
fastapi = "^0.111.1"
httpx = "^0.27.0"

[tool.poetry.group.pre-commit.dependencies]
mypy = "^1.10.1"
pre-commit = "^3.7.1"
ruff = "^0.5.2"
deptry = "^0.16.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.23.8"
pytest-cov = "^5.0.0"
pytest-split = "^0.9.0"
pytest-xdist = "^3.6.1"
asgi-lifespan = "^2.1.0"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.2"
rich = "^13.7.1"
respx = "^0.21.1"
hypothesis = "^6.108.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.mypy]
warn_return_any = "True"
warn_unused_configs = "True"
check_untyped_defs = "True"
disallow_untyped_defs = "True"
plugins = ["pydantic.mypy"]

[tool.deptry.per_rule_ignores]
DEP002 = [
  # uvicorn is used by the Dockerfile
  "uvicorn",
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pydocstyle
    "D",
    # pep8-naming
    "N",
    # pylint
    "PL",
    # refurb
    "FURB",
    # ruff
    "RUF",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
force-single-line = true
